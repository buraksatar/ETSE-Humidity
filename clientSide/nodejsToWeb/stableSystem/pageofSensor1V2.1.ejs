<!-- views/pages/pageofSensor1.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
    <% include ../partials/head %>
    <link rel="stylesheet" type="text/css" href="https://github.com/epochjs/epoch/blob/master/tests/render/css/tests.css">
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>	
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <script src="https://cdn.jsdelivr.net/epoch/0.8.4/epoch.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/epoch/0.8.4/epoch.min.css">
	<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
	<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
	
    
	<style>
        .test .epoch {
            width: 1000px;
            height: 500px;
        }
    </style>
</head>


<meta charset='UTF-8'> 
<meta name='viewport' content='width=device-width', initial-scale=1.0></head>


<body class="container", onload=generate_table() >
    
    <header>
        <% include ../partials/header %>
    </header>
   <form id="materialform2">
    
       <select id="materialList2" name='filling2' ">
           	   <option value="Material1" selected>Material 1</option>
                <option value="Material2">Material 2</option>
                <option value="Material3">Material 3</option>
		   		<option value="Material4">Material 4</option>
		   		<option value="Material5">Material 5</option>
		   		<option value="Material6">Material 6</option>
		   		<option value="Material7">Material 7</option>
		   		<option value="Material8">Material 8</option>
		   		<option value="Material9">Material 9</option>
        </select>
        <br/><br/>

               <fieldset>
		<div id="output1"> </div>
 		<div id="totalPrice"> </div>
		</fieldset>
       		<output name="totalamount"></output>
   
   </form>

<div class="container">
<div class="main">
<form action="pageofSensor1" method="post">
		
	<label>Show after this date  :</label>
	<input type="text" name="selectedDate" id="datepicker" value=''/>


</form>
</div>
</div>  


<script>
//convert dates
 function convert(d) {
        // Converts the date in d to a date-object. The input can be:
        //   a date object: returned without modification
        //  an array      : Interpreted as [year,month,day]. NOTE: month is 0-11.
        //   a number     : Interpreted as number of milliseconds
        //                  since 1 Jan 1970 (a timestamp) 
        //   a string     : Any format supported by the javascript engine, like
        //                  "YYYY/MM/DD", "MM/DD/YYYY", "Jan 31 2009" etc.
        //  an object     : Interpreted as an object with year, month and date
        //                  attributes.  **NOTE** month is 0-11.
        return (
            d.constructor === Date ? d :
            d.constructor === Array ? new Date(d[0],d[1],d[2]) :
            d.constructor === Number ? new Date(d) :
            d.constructor === String ? new Date(d) :
            typeof d === "object" ? new Date(d.year,d.month,d.date) :
            NaN
        );
    }



///compare dates
function compareDates(a,b) {
        // Compare two dates (could be of any type supported by the convert
        // function above) and returns:
        //  -1 : if a < b
        //   0 : if a = b
        //   1 : if a > b
        // NaN : if a or b is an illegal date
        // NOTE: The code inside isFinite does an assignment (=).
        return (
            isFinite(a=this.convert(a).valueOf()) &&
            isFinite(b=this.convert(b).valueOf()) ?
            (a>b)-(a<b) :
            NaN
        );
    }



//demodeneme
function myFunction() {
	//bodyDatas.row[1].style= "display: none;";
	//tagDatas.humidtyCell[1].nodeValue=99;
	//console.log(tagDatas.timeData[1]);
	for(var i=0; i<tagDatas.timeData.length; i++ ){
		var aaa = new Date(Date.parse(tagDatas.timeData[i].replace('-','/','g')));
		console.log('date1 ' + aaa.getTime());

		var mySQLDate = document.getElementById("datepicker").value;
		mySQLDate2 = new Date(Date.parse(mySQLDate.replace('-','/','g')));

		console.log('date2 ' + mySQLDate2.getTime());

		var result = compareDates(aaa,mySQLDate2);
		
		if (result == 1){

			bodyDatas.row[i].style= 'table-row';
		}
		else if (result == 0){
			console.log('bok vaar');
		}
		else{

			bodyDatas.row[i].style= "display: none;";
		}
	}
}



//0-datepicker
 $( function() {
	$.datepicker.setDefaults({ dateFormat: 'yy-mm-dd' });
    $( "#datepicker" ).datepicker({
		onSelect: function(date) {
            myFunction();
        }
	});

  });



// 1 - FOR THE CALCULATIONS of HUMIDITY

	function getCalculate(a,b,c,x){
 		var result1 = a * (Math.pow(x, b)) + c;
     		var result2 = result1.toPrecision(5);
     		return result2;
	}

// 2 - 
	// declare variables
	var tagDatas = {
		idData : [],
		tempData : [],
		adcData : [],
		resData : [],
		muxData : [],
		timeData : [],
		humidtyCell : [],
		strUser : [],
		chipIDnumber : []
	}


	var bodyDatas = {
        body : [],
        tbl : [],
        divTable : [],
        tblBody : [],
        row : []
    }
        	
	// assigning

	<%for(var i=1;i < pageId.length; i++){ %>
    	tagDatas.idData.push(<%=pageId[i]%>-1);
		tagDatas.tempData.push(<%=pageTemp[i]%>);
		tagDatas.adcData.push(<%=pageAdc[i]%>);
		tagDatas.resData.push(<%=pageRes[i]%>);
		tagDatas.muxData.push(<%=pageMux[i]%>);
		tagDatas.chipIDnumber.push('<%= pageId %>');
		tagDatas.timeData.push('<%= pageTime[i] %>');
	<% } %>

	// variable for drawing data	
	var material1Datas = [];

	// create a dynamic table 
	function generate_table() {
		// get the reference for the body
  		bodyDatas.body = document.getElementsByTagName("body")[0];
  		
 		// creates a <table> element and a <tbody> element
  		bodyDatas.tbl     = document.createElement("table");
		bodyDatas.divTable = document.createElement("div");
  		bodyDatas.tblBody = document.createElement("tbody");
 		bodyDatas.row = document.createElement("tr");
		
		// CREATE THE COLUMNS FUNCTION
        function createColumn (name){
            var TH = document.createElement("th");
            TH.align = "center";
            var th = document.createTextNode(name);
            TH.appendChild(th);
		    bodyDatas.row.appendChild(TH)
        }

        // CREATE COLUMNS
        createColumn('ID');
        createColumn('Temperature');
        createColumn('ADC');
        createColumn('Resistor');
        createColumn('Mux');
        createColumn('Moisture');
		createColumn('Time');

		
		bodyDatas.tblBody.appendChild(bodyDatas.row)
		
		var e = document.getElementById("materialList2");
		tagDatas.strUser.push(e.options[e.selectedIndex].value);	
		
		// function for creating Elements
  		function createElement(xData){
 				var cell = document.createElement("td");
      			var cellText = document.createTextNode(xData);
      			cell.appendChild(cellText);
				  bodyDatas.row[i].appendChild(cell);
		}
		bodyDatas.row = [];
		  
		// creating all cells
  		for(var i=0;i < <%=pageId.length-1%> ; i++){
    			// creates a table row
				
    			bodyDatas.row.push(document.createElement("tr")); 
   			
				createElement(tagDatas.idData[i]);
				createElement(tagDatas.tempData[i]);
				createElement(tagDatas.adcData[i]);
				createElement(tagDatas.resData[i]);
				createElement(tagDatas.muxData[i]);

				for (var j = 5; j < 6; j++) {
      				var cell = document.createElement("td");
				
					if ( tagDatas.strUser == "Material1" ){
						var preCellText = getCalculate(15.84,-0.2576,8.923,tagDatas.resData[i]);
					}
					else if ( tagDatas.strUser == "Material2" ){
						var preCellText = getCalculate(13.2,-0.2515,10.77,tagDatas.resData[i]);
					}
					else if ( tagDatas.strUser == "Material3" ){
						var preCellText = getCalculate(17.06,-0.2832,10.64,tagDatas.resData[i]);
					}
					else if ( tagDatas.strUser == "Material4" ){
						var preCellText = getCalculate(11.57,-0.2447,9.538,tagDatas.resData[i]);
					}
					else if ( tagDatas.strUser == "Material5" ){
						var preCellText = getCalculate(13.07,-0.2664,7.812,tagDatas.resData[i]);
					}
					else if ( tagDatas.strUser == "Material6" ){
						var preCellText = getCalculate(11.34,-0.2485,7.965,tagDatas.resData[i]);
					}
					else if ( tagDatas.strUser == "Material7" ){
						var preCellText = getCalculate(10.03,-0.3146,12.35,tagDatas.resData[i]);
					}
					else if ( tagDatas.strUser == "Material8" ){
						var preCellText = getCalculate(14.62,-0.2774,11.5,tagDatas.resData[i]);
					}
					else if ( tagDatas.strUser == "Material9" ){
						var preCellText = getCalculate(13.69,-0.2404,8.352,tagDatas.resData[i]);
					}

					cellText = document.createTextNode(preCellText.toString());
        			material1Datas.push(preCellText);
					//material1Datas[i].nodeValue = 9;
					tagDatas.humidtyCell.push(cellText);
					tagDatas.humidtyCell[i].nodeValue = preCellText;

     				cell.appendChild(cellText);
					  bodyDatas.row[i].appendChild(cell);
					

					createElement(tagDatas.timeData[i]);

    			}
				

    			// add the row to the end of the table body
    			bodyDatas.tblBody.appendChild(bodyDatas.row[i]);
  		}
		
  		// put the <tbody> in the <table>
  		bodyDatas.tbl.appendChild(bodyDatas.tblBody);	
		bodyDatas.divTable.appendChild(bodyDatas.tbl);
  		// appends <table> into <body>
  		bodyDatas.body.appendChild(bodyDatas.divTable);
  		// sets the border attribute of tbl to 2;
  		bodyDatas.tbl.setAttribute("border", "2");

	}



var interval2 = null;
interval2 = setInterval(ajaxCall,1000);
var latestTemp = null;

function ajaxCall() {
	
	$.ajax({
        	url: "/getBuff",
        	type: "POST",
        	dataType: "json",
        	data: {},
        	contentType: "application/json",
        	cache: false,
        	timeout: 5000,
        	complete: function() {
           		//called when complete
            	console.log('process complete');
        	},
        	success: function(data) {

				//deneme
				//$( function() {
				//	$( "#datepicker" ).datepicker();
				//	var deneme = $.datepicker.parseDate( "yy-mm-dd", "2007-01-26" );
				//	console.log(deneme);
  				//} );



					console.log('date  '+document.getElementById("datepicker").value );

				 	if( data.reloadPage != 0 ){
                    	location.reload();
                	}

					var e = document.getElementById("materialList2");
					tagDatas.strUser.push( e.options[e.selectedIndex].value );

					console.log('1-- '+ tagDatas.strUser[tagDatas.strUser.length-1] );

					console.log('2-- '+ tagDatas.strUser[tagDatas.strUser.length-2] );

					

					if( tagDatas.strUser[tagDatas.strUser.length-1] != tagDatas.strUser[tagDatas.strUser.length-2] ){
						
						var dynamicHumidty;
					
						if ( tagDatas.strUser[tagDatas.strUser.length-1] == "Material1" ){
							for (var i=0; i< tagDatas.idData.length; i++){

								//$("#area").load(location.href + " #area");
								//graphTheData();

								dynamicHumidty = getCalculate(15.84,-0.2576,8.923,tagDatas.resData[i]);
								tagDatas.humidtyCell[i].nodeValue = dynamicHumidty;							
								material1Datas.push( dynamicHumidty );
								
								//location.reload();	
								//graphTheData();

							}
						}
						else if ( tagDatas.strUser[tagDatas.strUser.length-1] == "Material2" ){
							for (var i=0; i< tagDatas.idData.length; i++){

								//$("#area").load(location.href + " #area");
								//graphTheData();

								dynamicHumidty = getCalculate(13.2,-0.2515,10.77,tagDatas.resData[i]);
								tagDatas.humidtyCell[i].nodeValue = dynamicHumidty;
								material1Datas.push( dynamicHumidty );

								

							}
						}
						else if ( tagDatas.strUser[tagDatas.strUser.length-1] == "Material3" ){
							for (var i=0; i< tagDatas.idData.length; i++){
								dynamicHumidty = getCalculate(17.06,-0.2832,10.64,tagDatas.resData[i]);
								tagDatas.humidtyCell[i].nodeValue = dynamicHumidty;
								material1Datas.push( dynamicHumidty );	
							}
						}
						else if ( tagDatas.strUser[tagDatas.strUser.length-1] == "Material4" ){
							for (var i=0; i< tagDatas.idData.length; i++){
								dynamicHumidty = getCalculate(11.57,-0.2447,9.538,tagDatas.resData[i]);
								tagDatas.humidtyCell[i].nodeValue = dynamicHumidty;
								material1Datas.push( dynamicHumidty );	
							}
						}
						else if ( tagDatas.strUser == "Material5" ){
							for (var i=0; i< tagDatas.idData.length; i++){
								tagDatas.humidtyCell[i].nodeValue = getCalculate(13.07,-0.2664,7.812,tagDatas.resData[i]);		
							}
						}
						else if ( tagDatas.strUser == "Material6" ){
							for (var i=0; i< tagDatas.idData.length; i++){
								tagDatas.humidtyCell[i].nodeValue = getCalculate(11.34,-0.2485,7.965,tagDatas.resData[i]);		
							}
						}
						else if ( tagDatas.strUser == "Material7" ){
							for (var i=0; i< tagDatas.idData.length; i++){
								tagDatas.humidtyCell[i].nodeValue = getCalculate(10.03,-0.3146,12.35,tagDatas.resData[i]);		
							}
						}
						else if ( tagDatas.strUser == "Material8" ){
							for (var i=0; i< tagDatas.idData.length; i++){
								tagDatas.humidtyCell[i].nodeValue = getCalculate(14.62,-0.2774,11.5,tagDatas.resData[i]);		
							}
						}
						else if ( tagDatas.strUser == "Material9" ){
							for (var i=0; i< tagDatas.idData.length; i++){
								tagDatas.humidtyCell[i].nodeValue = getCalculate(13.69,-0.2404,8.352,tagDatas.resData[i]);		
							}
						}
					
					}


			
  	    	},
        	error: function() {
               		console.log('process error');
        	},
	});
}


</script>

    <footer>
        <% include ../partials/footer %>
    </footer>

</body>
</html>
